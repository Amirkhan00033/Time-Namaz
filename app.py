from flask import Flask, render_template_string, send_from_directory
from datetime import datetime, time, timedelta
import pytz
import os

app = Flask(__name__)

def get_namaz_times():
    tz = pytz.timezone("Asia/Almaty")
    today = datetime.now(tz).date()

    fixed_times = {
        "Fajr": "02:24",
        "Sunrise": "04:09",
        "Dhuhr": "11:55",
        "Asr": "17:14",
        "Maghrib": "19:35",
        "Isha": "21:20"
    }

    result = {}
    for name, time_str in fixed_times.items():
        hour, minute = map(int, time_str.split(":"))
        dt = datetime.combine(today, time(hour, minute))
        dt = tz.localize(dt)
        result[name] = dt

    return result

def get_next_prayer_and_time_left(namaz_datetimes, now):
    sorted_prayers = sorted(namaz_datetimes.items(), key=lambda x: x[1])
    for name, dt in sorted_prayers:
        if dt > now:
            next_prayer = name
            diff = dt - now
            break
    else:
        # –ï—Å–ª–∏ –≤—Å–µ –Ω–∞–º–∞–∑—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ ‚Äî —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–≤—Ç—Ä–∞ (–ø–µ—Ä–≤—ã–π + 1 –¥–µ–Ω—å)
        name, dt = sorted_prayers[0]
        next_prayer = name
        diff = dt + timedelta(days=1) - now

    hours, remainder = divmod(diff.seconds, 3600)
    minutes = remainder // 60

    return next_prayer, hours, minutes

def get_current_prayer(namaz_datetimes, now):
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –Ω–∞–º–∞–∑, —Ç–æ –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π, –≤—Ä–µ–º—è –∫–æ—Ç–æ—Ä–æ–≥–æ —É–∂–µ –ø—Ä–æ—à–ª–æ, –Ω–æ —Å–ª–µ–¥—É—é—â–∏–π –µ—â—ë –Ω–µ –Ω–∞—Å—Ç—É–ø–∏–ª.
    –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —Å–µ–π—á–∞—Å –º–µ–∂–¥—É –ó—É—Ö—Ä –∏ –ê—Å—Ä ‚Äî —Ç–µ–∫—É—â–∏–π –Ω–∞–º–∞–∑ –ó—É—Ö—Ä.
    """
    sorted_prayers = sorted(namaz_datetimes.items(), key=lambda x: x[1])

    current = None
    for i, (name, dt) in enumerate(sorted_prayers):
        if dt > now:
            # –ù–∞–º–∞–∑, –∫–æ—Ç–æ—Ä—ã–π —Å–µ–π—á–∞—Å –∏–¥—ë—Ç ‚Äî —ç—Ç–æ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–∑ —Å–ø–∏—Å–∫–∞
            current = sorted_prayers[i-1][0] if i > 0 else sorted_prayers[-1][0]
            break
    else:
        # –ï—Å–ª–∏ —Å–µ–π—á–∞—Å –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞–º–∞–∑–∞ ‚Äî –∑–Ω–∞—á–∏—Ç —Å–µ–π—á–∞—Å –ø–æ—Å–ª–µ–¥–Ω–∏–π –Ω–∞–º–∞–∑ (–ò—à–∞)
        current = sorted_prayers[-1][0]

    return current

@app.route("/")
def home():
    timings = get_namaz_times()
    tz = pytz.timezone("Asia/Almaty")
    now_dt = datetime.now(tz)
    now_str = now_dt.strftime("%H:%M:%S")

    next_prayer, hours_left, minutes_left = get_next_prayer_and_time_left(timings, now_dt)
    # current_prayer —Ç–µ–ø–µ—Ä—å –Ω–µ –Ω—É–∂–µ–Ω –¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, —Ç–∞–∫ –∫–∞–∫ –ø–æ–¥—Å–≤–µ—Ç–∫–∞ –±—É–¥–µ—Ç JS
    #current_prayer = get_current_prayer(timings, now_dt)

    timings_str = {k: v.strftime("%H:%M") for k, v in timings.items()}

    html = """
    <html>
    <head>
        <title>–í—Ä–µ–º—è –ù–∞–º–∞–∑–∞ ‚Äî Almaty</title>
        <link rel="manifest" href="/manifest.json">
        <meta name="theme-color" content="#003366">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <style>
            body { font-family: Arial, sans-serif; background: #e6f0ff; color: #003366; padding: 20px; }
            h1 { text-align: center; }
            ul { list-style-type: none; padding: 0; max-width: 300px; margin: auto; }
            li { padding: 8px 0; font-size: 20px; }
            .prayer { font-weight: normal; padding: 4px 8px; border-radius: 8px; }
            .current { 
                background-color: #d0f0c0; /* —Å–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π */
                font-weight: bold;
                color: #2e7d32; /* —Ç–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–π —Ç–µ–∫—Å—Ç */
            }
            .footer { text-align: center; margin-top: 30px; font-size: 14px; color: #555; }
            #current-time { text-align: center; font-size: 18px; margin-bottom: 20px; }
            #notif-toggle { display: block; margin: 20px auto; padding: 10px 20px; background: #003366; color: white; border: none; border-radius: 8px; cursor: pointer; }
            #next-prayer-info { text-align: center; font-size: 18px; margin-bottom: 20px; }
        </style>
    </head>
    <body>
        <h1>üïå –í—Ä–µ–º—è –Ω–∞–º–∞–∑–∞ ‚Äî Almaty</h1>
        <div id="current-time">–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {{ now }}</div>
        <div id="next-prayer-info">
            –°–ª–µ–¥—É—é—â–∏–π –Ω–∞–º–∞–∑: <strong>{{ next_prayer }}</strong> —á–µ—Ä–µ–∑ {{ hours_left }} —á–∞—Å–æ–≤ {{ minutes_left }} –º–∏–Ω—É—Ç
        </div>
        <ul id="prayer-list">
            {% for name, time in timings.items() %}
                <li class="prayer" data-name="{{ name }}">
                    {% if name == "Fajr" %}üåô{% elif name == "Sunrise" %}üåÖ{% elif name == "Dhuhr" %}‚òÄÔ∏è{% elif name == "Asr" %}üåá{% elif name == "Maghrib" %}üåÜ{% elif name == "Isha" %}üåÉ{% endif %}
                    <span class="prayer-name">{{ name }}:</span> {{ time }}
                </li>
            {% endfor %}
        </ul>

        <button id="notif-toggle">–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</button>
        <div class="footer">–û–±–Ω–æ–≤–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–º–∞–∑–∞</div>

        <script>
            const namazTimes = {
                Fajr: "{{ timings['Fajr'] }}",
                Sunrise: "{{ timings['Sunrise'] }}",
                Dhuhr: "{{ timings['Dhuhr'] }}",
                Asr: "{{ timings['Asr'] }}",
                Maghrib: "{{ timings['Maghrib'] }}",
                Isha: "{{ timings['Isha'] }}"
            };

            let notificationsEnabled = false;

            document.getElementById("notif-toggle").addEventListener("click", async () => {
                if (Notification.permission !== "granted") {
                    await Notification.requestPermission();
                }

                notificationsEnabled = !notificationsEnabled;
                document.getElementById("notif-toggle").textContent = notificationsEnabled ? "–í—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" : "–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è";
            });

            function timeToMinutes(t) {
                const [h, m] = t.split(":").map(Number);
                return h * 60 + m;
            }

            const namazTimesMinutes = {};
            for (const [name, t] of Object.entries(namazTimes)) {
                namazTimesMinutes[name] = timeToMinutes(t);
            }

            
                   function updateCurrentPrayerHighlight() {
    const now = new Date();
    const currentMinutes = now.getHours() * 60 + now.getMinutes();

    const sortedPrayers = Object.entries(namazTimesMinutes).sort((a,b) => a[1] - b[1]);

    // –ù–∞–π–¥—ë–º —Ç–µ–∫—É—â–∏–π –Ω–∞–º–∞–∑ - –ø–æ—Å–ª–µ–¥–Ω–∏–π, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—Ä–µ–º—è <= currentMinutes
    // –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –º–µ–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–µ—Ä–≤–æ–≥–æ –Ω–∞–º–∞–∑–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 02:00 < 02:24),
    // –∑–Ω–∞—á–∏—Ç —Ç–µ–∫—É—â–∏–π –Ω–∞–º–∞–∑ - –ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–Ω—è (–ò—à–∞)
    let currentPrayer = sortedPrayers[0][0];
    for (let i = 0; i < sortedPrayers.length; i++) {
        if (sortedPrayers[i][1] <= currentMinutes) {
            currentPrayer = sortedPrayers[i][0];
        }
    }
    if (currentMinutes < sortedPrayers[0][1]) {
        // –¢–µ–∫—É—â–∏–π –Ω–∞–º–∞–∑ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–∑ —Å–ø–∏—Å–∫–∞ (–ò—à–∞)
        currentPrayer = sortedPrayers[sortedPrayers.length - 1][0];
    }

    document.querySelectorAll("#prayer-list li.prayer").forEach(li => {
        li.classList.remove("current");
        // –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–µ–ª–æ—á–∫—É –∏–∑ span —Å –∫–ª–∞—Å—Å–æ–º arrow, –µ—Å–ª–∏ –µ—Å—Ç—å
        const arrowSpan = li.querySelector(".arrow");
        if (arrowSpan) {
            arrowSpan.remove();
        }
        if (li.dataset.name === currentPrayer) {
            li.classList.add("current");
            // –î–æ–±–∞–≤–∏–º —Å—Ç—Ä–µ–ª–æ—á–∫—É –≤ –Ω–∞—á–∞–ª–æ li, –Ω–µ –ª–æ–º–∞—è —ç–º–æ–¥–∑–∏ –∏ —Ç–µ–∫—Å—Ç
            const arrow = document.createElement("span");
            arrow.textContent = "‚ñ∂Ô∏è ";
            arrow.classList.add("arrow");
            li.prepend(arrow);
        }
    });
}
 

            function updateTime() {
                const now = new Date();
                const hours = String(now.getHours()).padStart(2, '0');
                const minutes = String(now.getMinutes()).padStart(2, '0');
                const seconds = String(now.getSeconds()).padStart(2, '0');
                document.getElementById('current-time').textContent = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ' + hours + ':' + minutes + ':' + seconds;

                const currentTime = hours + ":" + minutes;

                if (notificationsEnabled) {
                    for (const [name, time] of Object.entries(namazTimes)) {
                        if (time === currentTime) {
                            new Notification("üïå –í—Ä–µ–º—è –Ω–∞–º–∞–∑–∞", {
                                body: `${name} ‚Äî —Å–µ–π—á–∞—Å –≤—Ä–µ–º—è –Ω–∞–º–∞–∑–∞`,
                                icon: "/static/icons/icon-192.png"
                            });
                        }
                    }
                }
            }

            setInterval(() => {
                updateCurrentPrayerHighlight();
                updateTime();
            }, 1000);

            window.onload = () => {
                updateCurrentPrayerHighlight();
                updateTime();
            };

            if ('serviceWorker' in navigator) {
                navigator.serviceWorker.register('/static/sw.js')
                    .then(() => console.log("‚úÖ Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"))
                    .catch(err => console.error("‚ùå SW –æ—à–∏–±–∫–∞:", err));
            }
        </script>
    </body>
    </html>
    """
    return render_template_string(html, timings=timings_str, now=now_str, 
                                  next_prayer=next_prayer, hours_left=hours_left, minutes_left=minutes_left)


@app.route('/manifest.json')
def manifest():
    return send_from_directory(os.path.dirname(__file__), 'manifest.json')

if __name__ == "__main__":
    app.run(debug=True)
